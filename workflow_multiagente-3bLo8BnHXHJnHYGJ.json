{"createdAt":"2025-08-21T11:17:57.290Z","updatedAt":"2025-08-21T13:31:14.000Z","id":"3bLo8BnHXHJnHYGJ","name":"workflow_multiagente","active":false,"isArchived":false,"nodes":[{"parameters":{"operation":"append","documentId":{"__rl":true,"value":"16oL4fD-g5SjJID8tjTJkAbBvhd9nFZ8biaY6tFE8AtE","mode":"list","cachedResultName":"Cases_curso_n8n","cachedResultUrl":"https://docs.google.com/spreadsheets/d/16oL4fD-g5SjJID8tjTJkAbBvhd9nFZ8biaY6tFE8AtE/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1450601,"mode":"list","cachedResultName":"Case 2","cachedResultUrl":"https://docs.google.com/spreadsheets/d/16oL4fD-g5SjJID8tjTJkAbBvhd9nFZ8biaY6tFE8AtE/edit#gid=1450601"},"columns":{"mappingMode":"defineBelow","value":{"Nome":"={{ $json.Nome }}","WhatsApp":"={{ $json.idConversa }}"},"matchingColumns":[],"schema":[{"id":"Nome","displayName":"Nome","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"WhatsApp","displayName":"WhatsApp","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[1168,128],"id":"38b75a67-3e17-4528-9972-6f826c5895bc","name":"Append row in sheet","credentials":{"googleSheetsOAuth2Api":{"id":"jlSK6LVQmnLP7ZaJ","name":"Google Sheets account 2"}}},{"parameters":{"promptType":"define","text":"={{ $('Edit Fields').item.json.Mensagem }}","options":{"systemMessage":"=Você é um super agente de suporte da empresa Sebratel Tecnologia, uma provedora de internet na região metropolitana de POA.\n1. Você é uma humanizado e técnico, irá responder toda e qualquer mensagem que te enviam.\n2. Se o usuário não informou CPF ou CNPJ, pergunte de forma receptiva.\n3. Quando informado, extraia apenas os números do documento (ex: \"123.456.789-00\" → \"12345678900\").\n4. Sua função será utilizar os agentes de forma eficaz, cada um com suas funções especificadas."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[1424,128],"id":"fef839dc-6074-432b-9003-d8a4d736e08a","name":"AI Agent"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-144,512],"id":"0202df07-f087-4e23-82ed-2b81993e7e22","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"JKL6I87VMb0TCoX7","name":"Google Gemini(PaLM) Api account 2"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Edit Fields').item.json.idConversa }}","contextWindowLength":30},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[144,528],"id":"bfa3d488-2b24-4181-a5f4-f38e0c057d1a","name":"Simple Memory"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2112,128],"id":"98e1a7a9-e42f-4837-af8c-31f38d2a05fc","name":"No Operation, do nothing"},{"parameters":{"httpMethod":"POST","path":"receber-mensagem-zapi","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-160,144],"id":"c1bd441a-fc38-40b0-80de-1f4ca215fa93","name":"Webhook","webhookId":"75e75c19-18ee-4b0c-9d35-c4cf13887ad8"},{"parameters":{"method":"POST","url":"https://api.z-api.io/instances/3E59F2AFB78BA023505DC200745B43DD/token/CC3B98858E449DE870658751/send-text","sendHeaders":true,"headerParameters":{"parameters":[{"name":"client-token","value":"F5b10efc71d93404488016342811ba814S"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"phone","value":"= {{ $('Edit Fields').item.json.idConversa }}"},{"name":"message","value":"={{ $json.output }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1808,128],"id":"2de3ae6c-5993-45df-8530-9d36cc42fda4","name":"HTTP Request"},{"parameters":{"content":"## I'm a note \nTodos:  1o atendimento cordial e receptivo, sem menus (dar opção de falar com humano)\n\nBackoffice: Validador de documentos\n\nOperacional: Validador de fotos da ativação/manutenção\nOperacional: Validador de materiais da ativação/manutenção\nOperacional: Validador de documentos/assinaturas da ativação/manutenção\n\nFinanceiro: Validador de comprovante de pagamento - Desbloqueio de contrato\nFinanceiro: Desbloqueio por confiança\nFinanceiro: Envio da segunda via do boleto\nFinanceiro: Envio da linha digitável do PIX\n\nRelacionamento: Troca de endereço (pedir por)\nRelacionamento: Troca de titularidade (se vou validar dados, posso fazer)\nRelacionamento: Mudança de plano - ofertar e mudar (se vou validar dados, posso fazer)\nRelacionamento: Cancelamento (pedir por, encaminhar a área)\nRelacionamento: Atualização Cadastral\n\nSuporte: Identificação de Massiva\nSuporte: Identificação de LOS (ONT/PPPoE fora)\nSuporte: Troca de senha da rede Wifi\nSuporte: Troca do nome da rede wifi\nSuporte: pergunta e (re)agenda sobre a visita de manutenção (informar data/turno/hora marcada)\nSuporte: pergunta e (re) agenda sobre a visita de ativação (informar data/turno/hora marcada)\n","height":656,"width":560},"type":"n8n-nodes-base.stickyNote","position":[-240,736],"typeVersion":1,"id":"f0ff072e-4bde-4bc0-ae0f-6a5dd33ab4b9","name":"Sticky Note"},{"parameters":{"content":"## Start\nRecebe a mensagem do Whats","height":368,"width":272},"type":"n8n-nodes-base.stickyNote","position":[-240,16],"typeVersion":1,"id":"717c4a9d-5576-4f3c-81dc-bf149e1c18cf","name":"Sticky Note1"},{"parameters":{"content":"## Condicionais\nVerifica algumas condicionais da mensagem","height":368,"width":400,"color":3},"type":"n8n-nodes-base.stickyNote","position":[48,16],"typeVersion":1,"id":"7c4af3ae-3d99-491d-b2bc-09e908ce924e","name":"Sticky Note2"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"8b62fe41-1d7a-4f13-9390-91b9b6370ab5","leftValue":"={{ $json.body.isGroup }}","rightValue":"","operator":{"type":"boolean","operation":"false","singleValue":true}},{"id":"ca9290e3-cd45-4434-9016-4c58f11d4bad","leftValue":"={{ $json.body.isNewsletter }}","rightValue":"","operator":{"type":"boolean","operation":"false","singleValue":true}},{"id":"b462119a-ed14-4edd-a400-4dc52658fcc6","leftValue":"={{ $json.body.broadcast }}","rightValue":"","operator":{"type":"boolean","operation":"false","singleValue":true}},{"id":"2992c889-6e5f-4ae9-81f2-3eceace36446","leftValue":"={{ $json.body.fromApi }}","rightValue":"","operator":{"type":"boolean","operation":"false","singleValue":true}},{"id":"791164c1-ac46-4892-bacf-189259f1f324","leftValue":"={{ $json.headers['z-api-token'] }}","rightValue":"CC3B98858E449DE870658751","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[80,144],"id":"982b5de1-e5e2-4b8a-80bf-eafca6552e0d","name":"If1"},{"parameters":{"content":"## Condicionais\nVerifica algumas condicionais da mensagem","height":368,"width":288,"color":2},"type":"n8n-nodes-base.stickyNote","position":[1072,16],"typeVersion":1,"id":"17d1c8cb-0221-4b9b-ab6a-67f72a38ee25","name":"Sticky Note3"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[256,240],"id":"e5201f6d-14f6-4cc0-accb-1d5c0a4025ac","name":"Do nothing"},{"parameters":{"content":"## Agente IA Suporte\nMotor do agente de IA","height":368,"width":320,"color":4},"type":"n8n-nodes-base.stickyNote","position":[1376,16],"typeVersion":1,"id":"7ebd3958-4d46-46ba-9944-52e7fb083d92","name":"Sticky Note4"},{"parameters":{"content":"## Encaminhamento\nEncaminha a mensagem gerada pelo motor do agente","height":368,"width":288,"color":2},"type":"n8n-nodes-base.stickyNote","position":[1712,16],"typeVersion":1,"id":"be2dc8e3-644f-427f-9e24-9ee91137bb90","name":"Sticky Note5"},{"parameters":{"content":"## Final\nFinaliza o atendimento","height":368,"width":288,"color":2},"type":"n8n-nodes-base.stickyNote","position":[2016,16],"typeVersion":1,"id":"dfa7ce8a-531a-419d-9b67-c35db55192f2","name":"Sticky Note6"},{"parameters":{"content":"## Gemini\nModelo da IA","height":320,"width":272,"color":6},"type":"n8n-nodes-base.stickyNote","position":[-240,400],"typeVersion":1,"id":"500ac658-eb67-48c5-b142-ce729b818bf9","name":"Sticky Note7"},{"parameters":{"content":"## Memória IA\nArmanexamento da IA","height":320,"width":272,"color":7},"type":"n8n-nodes-base.stickyNote","position":[48,400],"typeVersion":1,"id":"ec2198ce-c9db-48ca-8320-940744ac0c5f","name":"Sticky Note8"},{"parameters":{"content":"## Tool 1\nVerifica quem é o cliente","height":848,"width":1008,"color":5},"type":"n8n-nodes-base.stickyNote","position":[336,400],"typeVersion":1,"id":"d7847387-0b57-4cf6-8f09-9db2f565d2aa","name":"Sticky Note9"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","typeVersion":1,"position":[1168,1104],"id":"8100a3a0-760a-4ab8-9ef2-0285be4d13ff","name":"Embeddings Gemini","credentials":{"googlePalmApi":{"id":"JKL6I87VMb0TCoX7","name":"Google Gemini(PaLM) Api account 2"}}},{"parameters":{"mode":"retrieve-as-tool","toolDescription":"Traz os dados de contratos autenticados do SupaBase","tableName":{"__rl":true,"value":"authentication_contracts","mode":"list","cachedResultName":"authentication_contracts"},"options":{"queryName":"match_documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1.3,"position":[1088,992],"id":"af1a8114-b71d-4084-9dbb-78855f9ed09e","name":"Supabase Vector Store","credentials":{"supabaseApi":{"id":"CZJJZpq0IJ7SXHvQ","name":"Supabase account"}}},{"parameters":{"content":"## Condicionais\nVerifica algumas condicionais da mensagem","height":368,"width":288,"color":2},"type":"n8n-nodes-base.stickyNote","position":[768,16],"typeVersion":1,"id":"bd8243a2-0d6a-4f70-a7fc-5106c7222b75","name":"Sticky Note11"},{"parameters":{"assignments":{"assignments":[{"id":"77005381-34d3-42d7-ba86-2eff6ae91f97","name":"Nome","value":"={{ $('Webhook').item.json.body.chatName }}","type":"string"},{"id":"5c413e95-b1b7-49c1-8cd4-d4de21df26c6","name":"idConversa","value":"={{ $('Webhook').item.json.body.phone }}","type":"string"},{"id":"e9cdbba3-6164-47c1-a042-a5c7201f3c8c","name":"Mensagem","value":"={{ $('Webhook').item.json.body.text.message }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[864,128],"id":"3e04fea8-a354-45e5-b4b7-37def65f5799","name":"Edit Fields"},{"parameters":{"toolDescription":"Identifica a etiqueta através do CPF ou CNPJ capturado na conversa.\n\nutilize a url: \nhttps://erp.sebratel.net.br:45715/external/integrations/thirdparty/contractservicetagspaged?txId=\n\nse o CPF ou CNPJ for 11111111111 entao faça:\nhttps://erp.sebratel.net.br:45715/external/integrations/thirdparty/contractservicetagspaged?txId=11111111111 ","url":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"={{ $fromAI('Token') }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequestTool","typeVersion":4.2,"position":[736,976],"id":"10719deb-e45a-4e95-927c-2721ac61c499","name":"consulta_etiqueta"},{"parameters":{"toolDescription":"Realiza uma abertura de solicitação de visita técnica no sistema.","method":"POST","url":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"={{ $fromAI('Token') }}"},{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"specifyBody":"json","jsonBody":"={\n    \"incidentStatusId\": 1,\n    \"personId\": {{ $fromAI('clientId') }},\n    \"clientId\": {{ $fromAI('clientId') }},\n    \"incidentTypeId\": 1174,\n    \"contractServiceTagId\": {{ $fromAI('tagId') }},\n    \"catalogServiceId\": 1098,\n    \"serviceLevelAgreementId\": 122,\n    \"catalogServiceItemId\": null,\n    \"catalogServiceItemClassId\": null,\n    \"assignment\": {\n        \"title\": {{ $fromAI('title') }},\n        \"description\": {{ $fromAI('description') }},\n        \"priority\": 1,\n        \"beginningDate\": null,\n        \"finalDate\": null,\n        \"companyPlaceId\": 1 \n        },\n    \"contractServiceTagCategory\": \"0A3X17P9\", \n    \"solicitationServiceCategory1\": \"9f855136\",\n    \"solicitationServiceCategory2\": \"234d885e\",\n    \"solicitationServiceCategory3\": \"c489c775\"\n}","options":{}},"type":"n8n-nodes-base.httpRequestTool","typeVersion":4.2,"position":[896,976],"id":"3199021d-8c43-4736-ab53-c491b74a28ef","name":"abre_solicitacao"},{"parameters":{"content":"## Gera token\nVerifica algumas condicionais da mensagem","height":368,"width":288,"color":2},"type":"n8n-nodes-base.stickyNote","position":[464,16],"typeVersion":1,"id":"4c298ea7-cd35-4a31-a2a3-d1bf38240fce","name":"Sticky Note15"},{"parameters":{"method":"POST","url":"https://erp.sebratel.net.br:45700/connect/token","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/x-www-form-urlencoded"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"grant_type","value":"client_credentials"},{"name":"scope","value":"syngw"},{"name":"client_id","value":"544e262e-52f4-44c1-a66f-3e19cf7f4649"},{"name":"client_secret","value":"91ff11d5-4141-4308-8104-87b00287a429"},{"name":"syndata","value":"TWpNMU9EYzVaakk1T0dSaU1USmxaalprWldFd00ySTFZV1JsTTJRMFptUT06WlhsS1ZHVlhOVWxpTTA0d1NXcHZhVTFVWnpKTWFrbDRUMU0wZUUxcVozVk5hbFY0U1dsM2FWVXpiSFZTUjBscFQybEthMWx0Vm5SalJFRjNUVlJCZDBscGQybFNSMHBWWlZoQ2JFbHFiMmxqUnpsNlpFZGtlVnBZVFdsbVVUMDk6WlRoa01qTTFZamswWXpsaU5ETm1aRGczTURsa01qWTJZekF4TUdNM01HVT0="}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[560,128],"id":"0b13fce3-2ac2-4e12-bac8-53d204dd5f32","name":"gera_novo_token","disabled":true},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[432,704],"id":"c983da8a-5925-41ce-b466-1556eb5c1dd9","name":"Google Gemini Chat Model1","credentials":{"googlePalmApi":{"id":"JKL6I87VMb0TCoX7","name":"Google Gemini(PaLM) Api account 2"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Edit Fields').item.json.idConversa }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[608,704],"id":"07fdb9ca-13b7-4f57-9556-e0dadaf1d361","name":"Simple Memory1"},{"parameters":{"content":"## Tool 1\nVerifica quem é o cliente","height":848,"width":1008,"color":5},"type":"n8n-nodes-base.stickyNote","position":[1360,400],"typeVersion":1,"id":"53b636ce-596b-487a-bf75-b179d088c28f","name":"Sticky Note10"},{"parameters":{"toolDescription":"Identifica a pessoa através do CPF ou CNPJ capturado na conversa.\n\nutilize a url: \nhttps://erp.sebratel.net.br:45715/external/integrations/thirdparty/people/txid/\n\nse o CPF ou CNPJ for 11111111111 entao faça:\nhttps://erp.sebratel.net.br:45715/external/integrations/thirdparty/people/txid/11111111111.","url":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"={{ $fromAI('Token') }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequestTool","typeVersion":4.2,"position":[1888,992],"id":"db64ed8e-dad0-4567-8d0a-fb4fdb6b082b","name":"consulta_pessoa1"},{"parameters":{"toolDescription":"Realiza uma abertura de solicitação de visita técnica no sistema.","method":"POST","url":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"={{ $fromAI('Token') }}"},{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"specifyBody":"json","jsonBody":"={\n    \"incidentStatusId\": 1,\n    \"personId\": {{ $fromAI('clientId') }},\n    \"clientId\": {{ $fromAI('clientId') }},\n    \"incidentTypeId\": 1174,\n    \"contractServiceTagId\": {{ $fromAI('tagId') }},\n    \"catalogServiceId\": 1098,\n    \"serviceLevelAgreementId\": 122,\n    \"catalogServiceItemId\": null,\n    \"catalogServiceItemClassId\": null,\n    \"assignment\": {\n        \"title\": {{ $fromAI('title') }},\n        \"description\": {{ $fromAI('description') }},\n        \"priority\": 1,\n        \"beginningDate\": null,\n        \"finalDate\": null,\n        \"companyPlaceId\": 1 \n        },\n    \"contractServiceTagCategory\": \"0A3X17P9\", \n    \"solicitationServiceCategory1\": \"9f855136\",\n    \"solicitationServiceCategory2\": \"234d885e\",\n    \"solicitationServiceCategory3\": \"c489c775\"\n}","options":{}},"type":"n8n-nodes-base.httpRequestTool","typeVersion":4.2,"position":[2032,992],"id":"29d394ee-53c6-4ecb-a867-5064b0d20093","name":"abre_solicitacao1"},{"parameters":{"toolDescription":"tool reponsável por gerar novo token.","method":"POST","url":"=https://erp.sebratel.net.br:45700/connect/token","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/x-www-form-urlencoded"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"grant_type","value":"client_credentials"},{"name":"scope","value":"syngw"},{"name":"client_id","value":"544e262e-52f4-44c1-a66f-3e19cf7f4649"},{"name":"client_secret","value":"91ff11d5-4141-4308-8104-87b00287a429"},{"name":"syndata","value":"TWpNMU9EYzVaakk1T0dSaU1USmxaalprWldFd00ySTFZV1JsTTJRMFptUT06WlhsS1ZHVlhOVWxpTTA0d1NXcHZhVTFVWnpKTWFrbDRUMU0wZUUxcVozVk5hbFY0U1dsM2FWVXpiSFZTUjBscFQybEthMWx0Vm5SalJFRjNUVlJCZDBscGQybFNSMHBWWlZoQ2JFbHFiMmxqUnpsNlpFZGtlVnBZVFdsbVVUMDk6WlRoa01qTTFZamswWXpsaU5ETm1aRGczTURsa01qWTJZekF4TUdNM01HVT0="},{"name":"Api teste","value":"{{ $fromAI('parameters0_Value', ``, 'string') }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequestTool","typeVersion":4.2,"position":[2192,992],"id":"1593bcf9-b47b-41fa-a951-4eb3d368b175","name":"gerar_token1"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[1472,704],"id":"d77a9720-d4b8-4211-aac9-56fdae7805f1","name":"Google Gemini Chat Model2","credentials":{"googlePalmApi":{"id":"JKL6I87VMb0TCoX7","name":"Google Gemini(PaLM) Api account 2"}}},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[1648,704],"id":"9d708bfa-6105-4e2d-ac11-a9fbbccf6d64","name":"Simple Memory2"},{"parameters":{"toolDescription":"Ferramenta responsável por consultar a etiqueta do cliente e abrir uma solicitação no ERP.","text":"Antes de realizarmos a abertura da solicitação, iremos verificar a etiqueta do cliente:\n1. Use a ferramenta `consulta_etiqueta`, que retorna:\n   { \"id\": \"12345\" }\n2. Mostre esse número de etiqueta para o cliente e confirme se está correto.\n2. Se tiver mais de uma etiqueta, apresente todas elas e peça para escolher entre uma delas.\n4. Assim que ele confirmar o id da etiqueta desejada, siga para a próxima etapa.\n5. Encaminhe o valor do id da etiqueta para todas as ferramentas no formato abaixo:\n[\n  {\n    \"tagId\": 12345\n  }\n].\n\n⚠️ Regras para abertura de solicitação:\nApós selecionarmos a etiqueta escolhida pelo cliente iremos estudar o probema do cliente, a ideia é que sejamos muito preciso e somente agendamos determinados horário se realmente for um problema que necessita de uma visita. Caso seja um problema que realemente precisa de visita técnica então iremos utilizar a tool abre_solicitacao.\nNessa api iremos encaminhar as as seguintes informações:\n1. Você irá montar um TÍTULO, onde irá no máximo 4 palavras chaves sobre o problema identificado pelo cliente, e irá encaminhar para a ferramenta no formato:\n[\n  {\n    \"title\": \"ESCREVA AQUI O TÍTULO, AGENTE\"\n  }\n].\n2. Você irá montar também uma DESCRIÇÃO, contendo as principais dores do cliente que voce irá capturar, precisamos ser bem detalhista nessa etapa. Além disso você irá enviar essas descrições para a ferramenta no formato:\n[\n  {\n    \"description\": \"ESCREVA AQUI SUA DESCRIÇÃO, AGENTE\"\n  }\n].","options":{}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[784,464],"id":"b8e68854-60e0-4e8e-973f-7552b969f673","name":"suporte_tecnico"},{"parameters":{"toolDescription":"Agente de Vendas\n","text":"Venda os produtos da Sebratel, de forma eficaz.","options":{}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[1824,464],"id":"b582a05d-da0c-4845-b713-d44daa255660","name":"vendas"},{"parameters":{"content":"## Tool 1\nVerifica quem é o cliente","height":848,"width":1008,"color":5},"type":"n8n-nodes-base.stickyNote","position":[2384,400],"typeVersion":1,"id":"cc1994fe-1e2f-4235-9071-7cc0efc067be","name":"Sticky Note12"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","typeVersion":1,"position":[3216,1104],"id":"de6f88bf-3eb0-460c-9525-e3c9f75b52a4","name":"Embeddings Gemini1","credentials":{"googlePalmApi":{"id":"JKL6I87VMb0TCoX7","name":"Google Gemini(PaLM) Api account 2"}}},{"parameters":{"mode":"retrieve-as-tool","toolDescription":"Traz os dados de contratos autenticados do SupaBase","tableName":{"__rl":true,"value":"authentication_contracts","mode":"list","cachedResultName":"authentication_contracts"},"options":{"queryName":"match_documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1.3,"position":[3136,992],"id":"abc16983-b25f-4ed7-bb1f-69f731f0644b","name":"Supabase Vector Store1","credentials":{"supabaseApi":{"id":"CZJJZpq0IJ7SXHvQ","name":"Supabase account"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Executa query para obter dados de protocolos de chats como data e hora de atendimentos, atendentes e outras informações.\nⓂ️ Regra para protocolos Matrix/Chats\nSempre que o usuário perguntar sobre protocolos, atendimentos ou chats → use a ferramenta consulta_mysql.\n\nℹ️ Informações da tabela\nNome da tabela: db_matrix\nColunas disponíveis (use somente estas, nunca invente):\nprotocolo, data_entrada, data_atendimento, data_finalizacao, classificacao, servico, canal, data_fila, tempo_fila, tmic, tmia, ativo_receptivo, atendente, email, cpf\nservico → nome da equipe que atendeu.\ncanal → plataforma utilizada (WhatsApp, Instagram etc).\n\n📏 Regras para construção da query\nSempre monte queries válidas em MySQL.\nSempre retorne somente no formato JSON, nunca em texto solto.\nO JSON deve obrigatoriamente estar neste formato:\n[\n  {\n    \"query\": \"SELECT protocolo, data_entrada, data_atendimento FROM db_matrix WHERE cpf = '12345678900' LIMIT 5;\"\n  }\n]\n\nUse sempre os nomes exatos das colunas listadas acima.\nSempre aplique LIMIT 5 para evitar excesso de dados.\nFiltros obrigatórios:\nSe usuário pedir por protocolo → filtre por protocolo.\nSe usuário perguntar sobre tempo → use tempo_fila, tmic e tmia.\nNunca traga todos os registros sem filtro.\nSe o usuário não passar CPF, protocolo ou atendente → pergunte educadamente qual filtro deseja usar.\n\n🧩 Exemplos\nUsuário: “Quero saber o protocolo do agente joaoSilva”\n[\n  {\n    \"query\": \"SELECT protocolo FROM db_matrix WHERE atendente = 'joaoSilva' LIMIT 5;\"\n  }\n];\n\nUsuário: “Qual a data do atendimento cujo protocolo é 1234?”\n[\n  {\n    \"query\": \"SELECT data_atendimento FROM db_matrix WHERE protocolo = 1234 LIMIT 5;\"\n  }\n]\n\nUsuário: “Quantos atendimentos o atendente JoaoSilva realizou?”\n[\n  {\n    \"query\": \"SELECT count(protocolo) FROM db_matrix WHERE atendente LIKE 'JoaoSilva' LIMIT 3;\"\n  }\n]\n\n\n\n ","operation":"executeQuery","query":"{{ $fromAI('query') }}","options":{"connectionTimeoutMillis":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Connection_Timeout', ``, 'number') }}"}},"type":"n8n-nodes-base.mySqlTool","typeVersion":2.5,"position":[3008,960],"id":"b41c0d54-5059-4e38-94ee-b7e81c1af7bb","name":"consulta_mysql1","credentials":{"mySql":{"id":"oMA4i34MCkG3AGNu","name":"MySQL account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[2480,704],"id":"3b7c4af0-b095-4c37-9e4a-b19241eb0a74","name":"Google Gemini Chat Model3","credentials":{"googlePalmApi":{"id":"JKL6I87VMb0TCoX7","name":"Google Gemini(PaLM) Api account 2"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Edit Fields').item.json.idConversa }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[2624,704],"id":"1ee03ebf-c5b9-477c-b63b-736c72ba2bfa","name":"Simple Memory3"},{"parameters":{"content":"## Tool 1\nVerifica quem é o cliente","height":848,"width":1008,"color":5},"type":"n8n-nodes-base.stickyNote","position":[1360,1264],"typeVersion":1,"id":"2a2bd80f-d9a7-4495-bc60-e488bd3bfd6e","name":"Sticky Note13"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","typeVersion":1,"position":[2144,1776],"id":"21c34cfb-f8cf-45e3-84e7-46c239ff90ef","name":"Embeddings Gemini2","credentials":{"googlePalmApi":{"id":"JKL6I87VMb0TCoX7","name":"Google Gemini(PaLM) Api account 2"}}},{"parameters":{"mode":"retrieve-as-tool","toolDescription":"Traz os dados de contratos autenticados do SupaBase","tableName":{"__rl":true,"value":"authentication_contracts","mode":"list","cachedResultName":"authentication_contracts"},"options":{"queryName":"match_documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1.3,"position":[2016,1584],"id":"939f2130-7c34-48d0-8e1c-423bb07c95e6","name":"Supabase Vector Store2","credentials":{"supabaseApi":{"id":"CZJJZpq0IJ7SXHvQ","name":"Supabase account"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Executa query para obter dados de protocolos de chats como data e hora de atendimentos, atendentes e outras informações.\nⓂ️ Regra para protocolos Matrix/Chats\nSempre que o usuário perguntar sobre protocolos, atendimentos ou chats → use a ferramenta consulta_mysql.\n\nℹ️ Informações da tabela\nNome da tabela: db_matrix\nColunas disponíveis (use somente estas, nunca invente):\nprotocolo, data_entrada, data_atendimento, data_finalizacao, classificacao, servico, canal, data_fila, tempo_fila, tmic, tmia, ativo_receptivo, atendente, email, cpf\nservico → nome da equipe que atendeu.\ncanal → plataforma utilizada (WhatsApp, Instagram etc).\n\n📏 Regras para construção da query\nSempre monte queries válidas em MySQL.\nSempre retorne somente no formato JSON, nunca em texto solto.\nO JSON deve obrigatoriamente estar neste formato:\n[\n  {\n    \"query\": \"SELECT protocolo, data_entrada, data_atendimento FROM db_matrix WHERE cpf = '12345678900' LIMIT 5;\"\n  }\n]\n\nUse sempre os nomes exatos das colunas listadas acima.\nSempre aplique LIMIT 5 para evitar excesso de dados.\nFiltros obrigatórios:\nSe usuário pedir por protocolo → filtre por protocolo.\nSe usuário perguntar sobre tempo → use tempo_fila, tmic e tmia.\nNunca traga todos os registros sem filtro.\nSe o usuário não passar CPF, protocolo ou atendente → pergunte educadamente qual filtro deseja usar.\n\n🧩 Exemplos\nUsuário: “Quero saber o protocolo do agente joaoSilva”\n[\n  {\n    \"query\": \"SELECT protocolo FROM db_matrix WHERE atendente = 'joaoSilva' LIMIT 5;\"\n  }\n];\n\nUsuário: “Qual a data do atendimento cujo protocolo é 1234?”\n[\n  {\n    \"query\": \"SELECT data_atendimento FROM db_matrix WHERE protocolo = 1234 LIMIT 5;\"\n  }\n]\n\nUsuário: “Quantos atendimentos o atendente JoaoSilva realizou?”\n[\n  {\n    \"query\": \"SELECT count(protocolo) FROM db_matrix WHERE atendente LIKE 'JoaoSilva' LIMIT 3;\"\n  }\n]\n\n\n\n ","operation":"executeQuery","query":"{{ $fromAI('query') }}","options":{"connectionTimeoutMillis":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Connection_Timeout', ``, 'number') }}"}},"type":"n8n-nodes-base.mySqlTool","typeVersion":2.5,"position":[1792,1568],"id":"cdf151b1-7c0c-42dc-8fb0-fe5f8275f399","name":"consulta_mysql2","credentials":{"mySql":{"id":"oMA4i34MCkG3AGNu","name":"MySQL account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[1456,1568],"id":"043d6a91-a71b-4643-b7d6-3c923ecf2700","name":"Google Gemini Chat Model4","credentials":{"googlePalmApi":{"id":"JKL6I87VMb0TCoX7","name":"Google Gemini(PaLM) Api account 2"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Edit Fields').item.json.idConversa }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[1632,1568],"id":"44145adc-8309-47fd-a831-08ebb1d1a1b0","name":"Simple Memory4"},{"parameters":{"toolDescription":"Realiza novas gerações de tokens\n","text":"Ferramenta `consulta_pessoa`:\n1. Esta ferramenta recebe dois parâmetros:\n  - cpfOuCnpj (apenas os números do documento)\n  - token (string do Bearer Token)\n2. Ela retorna um JSON como:\n  {\n    \"id\": 123,\n    \"name\": \"João da Silva\",\n    \"email\": \"joao@email.com\",\n    \"phone\": \"11999999999\"\n  }\n3. Use esses dados para responder de forma simpática, chamando o cliente pelo nome.\n4. Encaminhe o valor do id do cliente para todos as ferramentas no formato abaixo:\n[\n  {\n    \"clientId\": \"Bearer abc123\"\n  }\n].\n\nSe o cliente solicitar uma visita:\n1. Use a ferramenta `consulta_etiqueta`, que retorna:\n   { \"id\": \"12345\" }\n2. Mostre esse número de etiqueta para o cliente e confirme se está correto.\n2. Se tiver mais de uma etiqueta, apresente todas elas e peça para escolher entre uma delas.\n4. Assim que ele confirmar o id da etiqueta desejada, siga para a próxima etapa.\n5. Encaminhe o valor do id da etiqueta para todas as ferramentas no formato abaixo:\n[\n  {\n    \"tagId\": 12345\n  }\n].\n\n⚠️ Regras para abertura de solicitação:\nApós selecionarmos a etiqueta escolhida pelo cliente iremos estudar o probema do cliente, a ideia é que sejamos muito preciso e somente agendamos determinados horário se realmente for um problema que necessita de uma visita. Caso seja um problema que realemente precisa de visita técnica então iremos utilizar a tool abre_solicitacao.\nNessa api iremos encaminhar as as seguintes informações:\n1. Você irá montar um TÍTULO, onde irá no máximo 4 palavras chaves sobre o problema identificado pelo cliente, e irá encaminhar para a ferramenta no formato:\n[\n  {\n    \"title\": \"ESCREVA AQUI O TÍTULO, AGENTE\"\n  }\n].\n2. Você irá montar também uma DESCRIÇÃO, contendo as principais dores do cliente que voce irá capturar, precisamos ser bem detalhista nessa etapa. Além disso você irá enviar essas descrições para a ferramenta no formato:\n[\n  {\n    \"description\": \"ESCREVA AQUI SUA DESCRIÇÃO, AGENTE\"\n  }\n].\n\n⚠️ Regras para erros de autorização e uso de token (com Bearer)\nSe qualquer chamada de ferramenta retornar \"Unauthorized\":\n1. Execute a ferramenta gerar_token.\n2. O resultado virá neste formato:\n[\n  {\n    \"response\": [\n      {\n        \"access_token\": \"<valor_do_token>\",\n        \"expires_in\": 3600,\n        \"token_type\": \"Bearer\",\n        \"scope\": \"syngw\"\n      }\n    ]\n  }\n]\n3. Extraia somente o valor de response[0].access_token.\nExemplo: \"access_token\": \"abc123\" → token = \"abc123\"\n4. Encaminhe este valor para todas as ferramentas precedido de \"Bearer \":\n[\n  {\n    \"token\": \"Bearer abc123\"\n  }\n]\n5. Nunca use CPF, CNPJ ou qualquer outro dado do cliente como token.\n6. Depois de gerar o token, repita a mesma chamada da ferramenta que retornou \"Unauthorized\" como 'consulta_pessoa', 'consulta_etiqueta', 'abre_solicitacao', etc, agora usando o token válido.\n\nSe alguma ferramenta retornar \"Unauthorized\" novamente:\n1. Rechame gerar_token.\n2. Capture response[0].access_token.\n3. Refaça a chamada original com \"Bearer <token>\".\n\n\nⓂ️ Regra para protocolos Matrix/Chats\nSempre que o usuário perguntar sobre protocolos, atendimentos ou chats → use a ferramenta consulta_mysql.\nℹ️ Informações da tabela\nNome da tabela: db_matrix\nColunas disponíveis (use somente estas, nunca invente):\nprotocolo, data_entrada, data_atendimento, data_finalizacao, classificacao, servico, canal, data_fila, tempo_fila, tmic, tmia, ativo_receptivo, atendente, email, cpf\nservico → nome da equipe que atendeu.\ncanal → plataforma utilizada (WhatsApp, Instagram etc).\n📏 Regras para construção da query\nSempre monte queries válidas em MySQL.\nSempre retorne somente no formato JSON, nunca em texto solto.\nO JSON deve obrigatoriamente estar neste formato:\n[\n  {\n    \"query\": \"SELECT protocolo, data_entrada, data_atendimento FROM db_matrix WHERE cpf = '12345678900' LIMIT 5;\"\n  }\n]\nUse sempre os nomes exatos das colunas listadas acima.\nSempre aplique LIMIT 5 para evitar excesso de dados.\nFiltros obrigatórios:\nSe usuário pedir por protocolo → filtre por protocolo.\nSe usuário perguntar sobre tempo → use tempo_fila, tmic e tmia.\nNunca traga todos os registros sem filtro.\nSe o usuário não passar CPF, protocolo ou atendente → pergunte educadamente qual filtro deseja usar.\n\n🧩 Exemplos\nUsuário: “Quero saber o protocolo do agente joaoSilva”\n[\n  {\n    \"query\": \"SELECT protocolo FROM db_matrix WHERE atendente = 'joaoSilva' LIMIT 5;\"\n  }\n];\n\nUsuário: “Qual a data do atendimento cujo protocolo é 1234?”\n[\n  {\n    \"query\": \"SELECT data_atendimento FROM db_matrix WHERE protocolo = 1234 LIMIT 5;\"\n  }\n]\n\nUsuário: “Quantos atendimentos o atendente JoaoSilva realizou?”\n[\n  {\n    \"query\": \"SELECT count(protocolo) FROM db_matrix WHERE atendente LIKE 'JoaoSilva' LIMIT 3;\"\n  }\n]","options":{}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[1808,1328],"id":"e108703e-3f62-4f5e-a538-bbf28f0e9f5e","name":"consulta_token"},{"parameters":{"content":"## Tool 1\nVerifica quem é o cliente","height":848,"width":1008,"color":5},"type":"n8n-nodes-base.stickyNote","position":[336,1264],"typeVersion":1,"id":"6bd85ba5-7c59-4c88-95d5-35d267ca29bf","name":"Sticky Note14"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[432,1568],"id":"0a3a93c2-6d47-4291-bf77-7e045c6f013a","name":"Google Gemini Chat Model5","credentials":{"googlePalmApi":{"id":"JKL6I87VMb0TCoX7","name":"Google Gemini(PaLM) Api account 2"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Edit Fields').item.json.idConversa }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[576,1568],"id":"425ce8c6-561d-4b51-853e-07342a368f73","name":"Simple Memory5"},{"parameters":{"toolDescription":"Financeiro: Validador de comprovante de pagamento - Desbloqueio de contrato\nFinanceiro: Desbloqueio por confiança\nFinanceiro: Envio da segunda via do boleto\nFinanceiro: Envio da linha digitável do PIX","text":"Ferramenta `consulta_pessoa`:\n1. Esta ferramenta recebe dois parâmetros:\n  - cpfOuCnpj (apenas os números do documento)\n  - token (string do Bearer Token)\n2. Ela retorna um JSON como:\n  {\n    \"id\": 123,\n    \"name\": \"João da Silva\",\n    \"email\": \"joao@email.com\",\n    \"phone\": \"11999999999\"\n  }\n3. Use esses dados para responder de forma simpática, chamando o cliente pelo nome.\n4. Encaminhe o valor do id do cliente para todos as ferramentas no formato abaixo:\n[\n  {\n    \"clientId\": \"Bearer abc123\"\n  }\n].\n\nSe o cliente solicitar uma visita:\n1. Use a ferramenta `consulta_etiqueta`, que retorna:\n   { \"id\": \"12345\" }\n2. Mostre esse número de etiqueta para o cliente e confirme se está correto.\n2. Se tiver mais de uma etiqueta, apresente todas elas e peça para escolher entre uma delas.\n4. Assim que ele confirmar o id da etiqueta desejada, siga para a próxima etapa.\n5. Encaminhe o valor do id da etiqueta para todas as ferramentas no formato abaixo:\n[\n  {\n    \"tagId\": 12345\n  }\n].\n\n⚠️ Regras para abertura de solicitação:\nApós selecionarmos a etiqueta escolhida pelo cliente iremos estudar o probema do cliente, a ideia é que sejamos muito preciso e somente agendamos determinados horário se realmente for um problema que necessita de uma visita. Caso seja um problema que realemente precisa de visita técnica então iremos utilizar a tool abre_solicitacao.\nNessa api iremos encaminhar as as seguintes informações:\n1. Você irá montar um TÍTULO, onde irá no máximo 4 palavras chaves sobre o problema identificado pelo cliente, e irá encaminhar para a ferramenta no formato:\n[\n  {\n    \"title\": \"ESCREVA AQUI O TÍTULO, AGENTE\"\n  }\n].\n2. Você irá montar também uma DESCRIÇÃO, contendo as principais dores do cliente que voce irá capturar, precisamos ser bem detalhista nessa etapa. Além disso você irá enviar essas descrições para a ferramenta no formato:\n[\n  {\n    \"description\": \"ESCREVA AQUI SUA DESCRIÇÃO, AGENTE\"\n  }\n].\n\n⚠️ Regras para erros de autorização e uso de token (com Bearer)\nSe qualquer chamada de ferramenta retornar \"Unauthorized\":\n1. Execute a ferramenta gerar_token.\n2. O resultado virá neste formato:\n[\n  {\n    \"response\": [\n      {\n        \"access_token\": \"<valor_do_token>\",\n        \"expires_in\": 3600,\n        \"token_type\": \"Bearer\",\n        \"scope\": \"syngw\"\n      }\n    ]\n  }\n]\n3. Extraia somente o valor de response[0].access_token.\nExemplo: \"access_token\": \"abc123\" → token = \"abc123\"\n4. Encaminhe este valor para todas as ferramentas precedido de \"Bearer \":\n[\n  {\n    \"token\": \"Bearer abc123\"\n  }\n]\n5. Nunca use CPF, CNPJ ou qualquer outro dado do cliente como token.\n6. Depois de gerar o token, repita a mesma chamada da ferramenta que retornou \"Unauthorized\" como 'consulta_pessoa', 'consulta_etiqueta', 'abre_solicitacao', etc, agora usando o token válido.\n\nSe alguma ferramenta retornar \"Unauthorized\" novamente:\n1. Rechame gerar_token.\n2. Capture response[0].access_token.\n3. Refaça a chamada original com \"Bearer <token>\".\n\n\nⓂ️ Regra para protocolos Matrix/Chats\nSempre que o usuário perguntar sobre protocolos, atendimentos ou chats → use a ferramenta consulta_mysql.\nℹ️ Informações da tabela\nNome da tabela: db_matrix\nColunas disponíveis (use somente estas, nunca invente):\nprotocolo, data_entrada, data_atendimento, data_finalizacao, classificacao, servico, canal, data_fila, tempo_fila, tmic, tmia, ativo_receptivo, atendente, email, cpf\nservico → nome da equipe que atendeu.\ncanal → plataforma utilizada (WhatsApp, Instagram etc).\n📏 Regras para construção da query\nSempre monte queries válidas em MySQL.\nSempre retorne somente no formato JSON, nunca em texto solto.\nO JSON deve obrigatoriamente estar neste formato:\n[\n  {\n    \"query\": \"SELECT protocolo, data_entrada, data_atendimento FROM db_matrix WHERE cpf = '12345678900' LIMIT 5;\"\n  }\n]\nUse sempre os nomes exatos das colunas listadas acima.\nSempre aplique LIMIT 5 para evitar excesso de dados.\nFiltros obrigatórios:\nSe usuário pedir por protocolo → filtre por protocolo.\nSe usuário perguntar sobre tempo → use tempo_fila, tmic e tmia.\nNunca traga todos os registros sem filtro.\nSe o usuário não passar CPF, protocolo ou atendente → pergunte educadamente qual filtro deseja usar.\n\n🧩 Exemplos\nUsuário: “Quero saber o protocolo do agente joaoSilva”\n[\n  {\n    \"query\": \"SELECT protocolo FROM db_matrix WHERE atendente = 'joaoSilva' LIMIT 5;\"\n  }\n];\n\nUsuário: “Qual a data do atendimento cujo protocolo é 1234?”\n[\n  {\n    \"query\": \"SELECT data_atendimento FROM db_matrix WHERE protocolo = 1234 LIMIT 5;\"\n  }\n]\n\nUsuário: “Quantos atendimentos o atendente JoaoSilva realizou?”\n[\n  {\n    \"query\": \"SELECT count(protocolo) FROM db_matrix WHERE atendente LIKE 'JoaoSilva' LIMIT 3;\"\n  }\n]","options":{}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[784,1328],"id":"d87d53c6-c22c-4c71-abc3-ca74aaac43a5","name":"financeiro"},{"parameters":{"toolDescription":"Realiza uma abertura de solicitação de visita técnica no sistema.","method":"POST","url":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"={{ $fromAI('Token') }}"},{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"specifyBody":"json","jsonBody":"={\n    \"incidentStatusId\": 1,\n    \"personId\": {{ $fromAI('clientId') }},\n    \"clientId\": {{ $fromAI('clientId') }},\n    \"incidentTypeId\": 1174,\n    \"contractServiceTagId\": {{ $fromAI('tagId') }},\n    \"catalogServiceId\": 1098,\n    \"serviceLevelAgreementId\": 122,\n    \"catalogServiceItemId\": null,\n    \"catalogServiceItemClassId\": null,\n    \"assignment\": {\n        \"title\": {{ $fromAI('title') }},\n        \"description\": {{ $fromAI('description') }},\n        \"priority\": 1,\n        \"beginningDate\": null,\n        \"finalDate\": null,\n        \"companyPlaceId\": 1 \n        },\n    \"contractServiceTagCategory\": \"0A3X17P9\", \n    \"solicitationServiceCategory1\": \"9f855136\",\n    \"solicitationServiceCategory2\": \"234d885e\",\n    \"solicitationServiceCategory3\": \"c489c775\"\n}","options":{}},"type":"n8n-nodes-base.httpRequestTool","typeVersion":4.2,"position":[1120,1792],"id":"db99f787-2ce0-4c0a-a591-5b20983439ed","name":"abre_solicitacao2"},{"parameters":{"toolDescription":"Agente de identificação do cliente","text":"Ferramenta `consulta_pessoa`:\n1. Esta ferramenta recebe dois parâmetros:\n  - cpfOuCnpj (apenas os números do documento)\n  - token (string do Bearer Token)\n2. Ela retorna um JSON como:\n  {\n    \"id\": 123,\n    \"name\": \"João da Silva\",\n    \"email\": \"joao@email.com\",\n    \"phone\": \"11999999999\"\n  }\n3. Use esses dados para responder de forma simpática, chamando o cliente pelo nome.\n4. Encaminhe o valor do id do cliente para todos as ferramentas no formato abaixo:\n[\n  {\n    \"clientId\": \"Bearer abc123\"\n  }\n].\n\nSe o cliente solicitar uma visita:\n1. Use a ferramenta `consulta_etiqueta`, que retorna:\n   { \"id\": \"12345\" }\n2. Mostre esse número de etiqueta para o cliente e confirme se está correto.\n2. Se tiver mais de uma etiqueta, apresente todas elas e peça para escolher entre uma delas.\n4. Assim que ele confirmar o id da etiqueta desejada, siga para a próxima etapa.\n5. Encaminhe o valor do id da etiqueta para todas as ferramentas no formato abaixo:\n[\n  {\n    \"tagId\": 12345\n  }\n].\n\n⚠️ Regras para abertura de solicitação:\nApós selecionarmos a etiqueta escolhida pelo cliente iremos estudar o probema do cliente, a ideia é que sejamos muito preciso e somente agendamos determinados horário se realmente for um problema que necessita de uma visita. Caso seja um problema que realemente precisa de visita técnica então iremos utilizar a tool abre_solicitacao.\nNessa api iremos encaminhar as as seguintes informações:\n1. Você irá montar um TÍTULO, onde irá no máximo 4 palavras chaves sobre o problema identificado pelo cliente, e irá encaminhar para a ferramenta no formato:\n[\n  {\n    \"title\": \"ESCREVA AQUI O TÍTULO, AGENTE\"\n  }\n].\n2. Você irá montar também uma DESCRIÇÃO, contendo as principais dores do cliente que voce irá capturar, precisamos ser bem detalhista nessa etapa. Além disso você irá enviar essas descrições para a ferramenta no formato:\n[\n  {\n    \"description\": \"ESCREVA AQUI SUA DESCRIÇÃO, AGENTE\"\n  }\n].\n\n⚠️ Regras para erros de autorização e uso de token (com Bearer)\nSe qualquer chamada de ferramenta retornar \"Unauthorized\":\n1. Execute a ferramenta gerar_token.\n2. O resultado virá neste formato:\n[\n  {\n    \"response\": [\n      {\n        \"access_token\": \"<valor_do_token>\",\n        \"expires_in\": 3600,\n        \"token_type\": \"Bearer\",\n        \"scope\": \"syngw\"\n      }\n    ]\n  }\n]\n3. Extraia somente o valor de response[0].access_token.\nExemplo: \"access_token\": \"abc123\" → token = \"abc123\"\n4. Encaminhe este valor para todas as ferramentas precedido de \"Bearer \":\n[\n  {\n    \"token\": \"Bearer abc123\"\n  }\n]\n5. Nunca use CPF, CNPJ ou qualquer outro dado do cliente como token.\n6. Depois de gerar o token, repita a mesma chamada da ferramenta que retornou \"Unauthorized\" como 'consulta_pessoa', 'consulta_etiqueta', 'abre_solicitacao', etc, agora usando o token válido.\n\nSe alguma ferramenta retornar \"Unauthorized\" novamente:\n1. Rechame gerar_token.\n2. Capture response[0].access_token.\n3. Refaça a chamada original com \"Bearer <token>\".\n\n\nⓂ️ Regra para protocolos Matrix/Chats\nSempre que o usuário perguntar sobre protocolos, atendimentos ou chats → use a ferramenta consulta_mysql.\nℹ️ Informações da tabela\nNome da tabela: db_matrix\nColunas disponíveis (use somente estas, nunca invente):\nprotocolo, data_entrada, data_atendimento, data_finalizacao, classificacao, servico, canal, data_fila, tempo_fila, tmic, tmia, ativo_receptivo, atendente, email, cpf\nservico → nome da equipe que atendeu.\ncanal → plataforma utilizada (WhatsApp, Instagram etc).\n📏 Regras para construção da query\nSempre monte queries válidas em MySQL.\nSempre retorne somente no formato JSON, nunca em texto solto.\nO JSON deve obrigatoriamente estar neste formato:\n[\n  {\n    \"query\": \"SELECT protocolo, data_entrada, data_atendimento FROM db_matrix WHERE cpf = '12345678900' LIMIT 5;\"\n  }\n]\nUse sempre os nomes exatos das colunas listadas acima.\nSempre aplique LIMIT 5 para evitar excesso de dados.\nFiltros obrigatórios:\nSe usuário pedir por protocolo → filtre por protocolo.\nSe usuário perguntar sobre tempo → use tempo_fila, tmic e tmia.\nNunca traga todos os registros sem filtro.\nSe o usuário não passar CPF, protocolo ou atendente → pergunte educadamente qual filtro deseja usar.\n\n🧩 Exemplos\nUsuário: “Quero saber o protocolo do agente joaoSilva”\n[\n  {\n    \"query\": \"SELECT protocolo FROM db_matrix WHERE atendente = 'joaoSilva' LIMIT 5;\"\n  }\n];\n\nUsuário: “Qual a data do atendimento cujo protocolo é 1234?”\n[\n  {\n    \"query\": \"SELECT data_atendimento FROM db_matrix WHERE protocolo = 1234 LIMIT 5;\"\n  }\n]\n\nUsuário: “Quantos atendimentos o atendente JoaoSilva realizou?”\n[\n  {\n    \"query\": \"SELECT count(protocolo) FROM db_matrix WHERE atendente LIKE 'JoaoSilva' LIMIT 3;\"\n  }\n]","options":{}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[2832,464],"id":"b42b4513-2340-4c54-842e-c2a1cdaad42e","name":"identificação_contato"},{"parameters":{"content":"## Tool 1\nVerifica quem é o cliente","height":848,"width":1008,"color":5},"type":"n8n-nodes-base.stickyNote","position":[2384,1264],"typeVersion":1,"id":"143aab2c-81e9-4497-addf-9690855d3b55","name":"Sticky Note16"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","typeVersion":1,"position":[3168,1776],"id":"5504fade-8855-4931-aa3f-129a8a4f9603","name":"Embeddings Gemini3","credentials":{"googlePalmApi":{"id":"JKL6I87VMb0TCoX7","name":"Google Gemini(PaLM) Api account 2"}}},{"parameters":{"mode":"retrieve-as-tool","toolDescription":"Traz os dados de contratos autenticados do SupaBase","tableName":{"__rl":true,"value":"authentication_contracts","mode":"list","cachedResultName":"authentication_contracts"},"options":{"queryName":"match_documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1.3,"position":[3040,1584],"id":"9dc97702-b52c-4800-9f69-75a37fb182f4","name":"Supabase Vector Store3","credentials":{"supabaseApi":{"id":"CZJJZpq0IJ7SXHvQ","name":"Supabase account"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Executa query para obter dados de protocolos de chats como data e hora de atendimentos, atendentes e outras informações.\nⓂ️ Regra para protocolos Matrix/Chats\nSempre que o usuário perguntar sobre protocolos, atendimentos ou chats → use a ferramenta consulta_mysql.\n\nℹ️ Informações da tabela\nNome da tabela: db_matrix\nColunas disponíveis (use somente estas, nunca invente):\nprotocolo, data_entrada, data_atendimento, data_finalizacao, classificacao, servico, canal, data_fila, tempo_fila, tmic, tmia, ativo_receptivo, atendente, email, cpf\nservico → nome da equipe que atendeu.\ncanal → plataforma utilizada (WhatsApp, Instagram etc).\n\n📏 Regras para construção da query\nSempre monte queries válidas em MySQL.\nSempre retorne somente no formato JSON, nunca em texto solto.\nO JSON deve obrigatoriamente estar neste formato:\n[\n  {\n    \"query\": \"SELECT protocolo, data_entrada, data_atendimento FROM db_matrix WHERE cpf = '12345678900' LIMIT 5;\"\n  }\n]\n\nUse sempre os nomes exatos das colunas listadas acima.\nSempre aplique LIMIT 5 para evitar excesso de dados.\nFiltros obrigatórios:\nSe usuário pedir por protocolo → filtre por protocolo.\nSe usuário perguntar sobre tempo → use tempo_fila, tmic e tmia.\nNunca traga todos os registros sem filtro.\nSe o usuário não passar CPF, protocolo ou atendente → pergunte educadamente qual filtro deseja usar.\n\n🧩 Exemplos\nUsuário: “Quero saber o protocolo do agente joaoSilva”\n[\n  {\n    \"query\": \"SELECT protocolo FROM db_matrix WHERE atendente = 'joaoSilva' LIMIT 5;\"\n  }\n];\n\nUsuário: “Qual a data do atendimento cujo protocolo é 1234?”\n[\n  {\n    \"query\": \"SELECT data_atendimento FROM db_matrix WHERE protocolo = 1234 LIMIT 5;\"\n  }\n]\n\nUsuário: “Quantos atendimentos o atendente JoaoSilva realizou?”\n[\n  {\n    \"query\": \"SELECT count(protocolo) FROM db_matrix WHERE atendente LIKE 'JoaoSilva' LIMIT 3;\"\n  }\n]\n\n\n\n ","operation":"executeQuery","query":"{{ $fromAI('query') }}","options":{"connectionTimeoutMillis":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Connection_Timeout', ``, 'number') }}"}},"type":"n8n-nodes-base.mySqlTool","typeVersion":2.5,"position":[2816,1568],"id":"8257fc9d-c84e-4221-ac88-eadabd3d44b5","name":"consulta_mysql","credentials":{"mySql":{"id":"oMA4i34MCkG3AGNu","name":"MySQL account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[2480,1568],"id":"073e58b0-86e5-4b1a-b6c4-02b50ebd6c8b","name":"Google Gemini Chat Model6","credentials":{"googlePalmApi":{"id":"JKL6I87VMb0TCoX7","name":"Google Gemini(PaLM) Api account 2"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Edit Fields').item.json.idConversa }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[2656,1568],"id":"e611b132-67cc-4139-abce-7345eb00a254","name":"Simple Memory6"},{"parameters":{"toolDescription":"Este agente é responsável por realizar atendimentos ","options":{}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[2832,1328],"id":"d7298140-5682-4c15-9198-2c14c2203a28","name":"agente_operacional"}],"connections":{"Append row in sheet":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"AI Agent":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Simple Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Webhook":{"main":[[{"node":"If1","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"No Operation, do nothing","type":"main","index":0}]]},"If1":{"main":[[{"node":"gera_novo_token","type":"main","index":0}],[{"node":"Do nothing","type":"main","index":0}]]},"Embeddings Gemini":{"ai_embedding":[[{"node":"Supabase Vector Store","type":"ai_embedding","index":0}]]},"Supabase Vector Store":{"ai_tool":[[{"node":"suporte_tecnico","type":"ai_tool","index":0}]]},"Edit Fields":{"main":[[{"node":"Append row in sheet","type":"main","index":0}]]},"consulta_etiqueta":{"ai_tool":[[{"node":"suporte_tecnico","type":"ai_tool","index":0}]]},"abre_solicitacao":{"ai_tool":[[{"node":"suporte_tecnico","type":"ai_tool","index":0}]]},"gera_novo_token":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Google Gemini Chat Model1":{"ai_languageModel":[[{"node":"suporte_tecnico","type":"ai_languageModel","index":0}]]},"Simple Memory1":{"ai_memory":[[{"node":"suporte_tecnico","type":"ai_memory","index":0}]]},"consulta_pessoa1":{"ai_tool":[[{"node":"vendas","type":"ai_tool","index":0}]]},"abre_solicitacao1":{"ai_tool":[[{"node":"vendas","type":"ai_tool","index":0}]]},"gerar_token1":{"ai_tool":[[{"node":"vendas","type":"ai_tool","index":0}]]},"Google Gemini Chat Model2":{"ai_languageModel":[[{"node":"vendas","type":"ai_languageModel","index":0}]]},"Simple Memory2":{"ai_memory":[[{"node":"vendas","type":"ai_memory","index":0}]]},"suporte_tecnico":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"vendas":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Embeddings Gemini1":{"ai_embedding":[[{"node":"Supabase Vector Store1","type":"ai_embedding","index":0}]]},"Supabase Vector Store1":{"ai_tool":[[{"node":"identificação_contato","type":"ai_tool","index":0}]]},"consulta_mysql1":{"ai_tool":[[{"node":"identificação_contato","type":"ai_tool","index":0}]]},"Google Gemini Chat Model3":{"ai_languageModel":[[{"node":"identificação_contato","type":"ai_languageModel","index":0}]]},"Simple Memory3":{"ai_memory":[[{"node":"identificação_contato","type":"ai_memory","index":0}]]},"Embeddings Gemini2":{"ai_embedding":[[{"node":"Supabase Vector Store2","type":"ai_embedding","index":0}]]},"Supabase Vector Store2":{"ai_tool":[[{"node":"consulta_token","type":"ai_tool","index":0}]]},"consulta_mysql2":{"ai_tool":[[{"node":"consulta_token","type":"ai_tool","index":0}]]},"Google Gemini Chat Model4":{"ai_languageModel":[[{"node":"consulta_token","type":"ai_languageModel","index":0}]]},"Simple Memory4":{"ai_memory":[[{"node":"consulta_token","type":"ai_memory","index":0}]]},"consulta_token":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Google Gemini Chat Model5":{"ai_languageModel":[[{"node":"financeiro","type":"ai_languageModel","index":0}]]},"Simple Memory5":{"ai_memory":[[{"node":"financeiro","type":"ai_memory","index":0}]]},"financeiro":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"abre_solicitacao2":{"ai_tool":[[{"node":"financeiro","type":"ai_tool","index":0}]]},"identificação_contato":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Embeddings Gemini3":{"ai_embedding":[[{"node":"Supabase Vector Store3","type":"ai_embedding","index":0}]]},"Supabase Vector Store3":{"ai_tool":[[{"node":"agente_operacional","type":"ai_tool","index":0}]]},"consulta_mysql":{"ai_tool":[[{"node":"agente_operacional","type":"ai_tool","index":0}]]},"Google Gemini Chat Model6":{"ai_languageModel":[[{"node":"agente_operacional","type":"ai_languageModel","index":0}]]},"Simple Memory6":{"ai_memory":[[{"node":"agente_operacional","type":"ai_memory","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"5a0ae187-4ee5-4474-88b4-80213aad2bd2","triggerCount":0,"shared":[{"createdAt":"2025-08-21T11:17:57.296Z","updatedAt":"2025-08-21T11:17:57.296Z","role":"workflow:owner","workflowId":"3bLo8BnHXHJnHYGJ","projectId":"T3171E2RbgkIbJjB"}],"tags":[]}