{"createdAt":"2025-08-30T19:42:29.253Z","updatedAt":"2025-08-30T22:40:56.000Z","id":"ngwKz2hdvldF12gF","name":"Sebratel - Backup your credentials to GitHub every 1 day(s)","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"2d84ba65-b861-42c5-a43f-ad4f7af3f346","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[816,512],"typeVersion":1},{"parameters":{"content":"## Subworkflow","height":750.8363163824032,"width":2086.845881354743,"color":6},"id":"0cca5eca-7382-4dde-9577-a792a054a8dd","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[368,880],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"1e97eddb-4334-4302-9f44-f5db01cf1397","name":"Return","type":"n8n-nodes-base.set","position":[2256,1088],"typeVersion":3.3},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"7a03f33c-b25d-45df-ba5f-c89ca35723e3","name":"Get File","type":"n8n-nodes-base.httpRequest","position":[1360,960],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"version":1,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"54fdc67f-5422-492d-af8b-749206753c25","name":"If file too large","type":"n8n-nodes-base.if","position":[1152,992],"typeVersion":2},{"parameters":{},"id":"ca41a764-6318-46ec-ab55-11f77139063c","name":"Merge Items","type":"n8n-nodes-base.merge","position":[1152,1248],"typeVersion":2},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();"},"id":"6e91c971-7c63-40cb-a120-e4de0b3fe482","name":"isDiffOrNew","type":"n8n-nodes-base.code","position":[1360,1248],"typeVersion":1},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"5c0cd3fe-39ed-4e10-bb9b-77bda66b7f3d","name":"Check Status","type":"n8n-nodes-base.switch","position":[1568,1248],"typeVersion":1},{"parameters":{},"id":"60118143-b65a-480a-b94e-4594200cc9e0","name":"Same file - Do nothing","type":"n8n-nodes-base.noOp","position":[1792,1088],"typeVersion":1},{"parameters":{},"id":"feceeeb3-2f46-4108-b11d-2336fb33292a","name":"File is different","type":"n8n-nodes-base.noOp","position":[1792,1248],"typeVersion":1},{"parameters":{},"id":"9be5d1bc-bb49-495f-a3e9-55483bc9683a","name":"File is new","type":"n8n-nodes-base.noOp","position":[1792,1408],"typeVersion":1},{"parameters":{"resource":"file","owner":{"__rl":true,"mode":"name","value":"={{ $('Globals').item.json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $('Globals').item.json.repo.name }}"},"filePath":"={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"729ea854-7e09-421b-8765-52ea19f229cf","name":"Create new file","type":"n8n-nodes-base.github","position":[2016,1408],"webhookId":"d20533a0-faf4-4605-b04c-0f43d9bc61a8","typeVersion":1,"credentials":{"githubApi":{"id":"vhzyXO7hHaxVDu20","name":"DM - GitHub account"}}},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"mode":"name","value":"={{ $('Globals').item.json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $('Globals').item.json.repo.name }}"},"filePath":"={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"8508830e-9280-42bd-b734-67508c865a87","name":"Edit existing file","type":"n8n-nodes-base.github","position":[2016,1232],"webhookId":"a115203d-2fd0-4573-9e5f-8b9cc9382f6b","typeVersion":1,"credentials":{"githubApi":{"id":"vhzyXO7hHaxVDu20","name":"DM - GitHub account"}}},{"parameters":{"options":{}},"id":"06d9dc49-3320-4095-ac79-f0a0a1cdc0d1","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[1408,608],"typeVersion":3},{"parameters":{"rule":{"interval":[{}]}},"id":"7b85e977-7606-4932-90f6-736a295bc496","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[816,704],"typeVersion":1.2},{"parameters":{"content":"## Backup to GitHub \nThis workflow will backup all instance credentials to GitHub.\n\nThe files are saved `ID.json` for the filename.\n\n### Setup\nOpen `Globals` node and update the values below ðŸ‘‡\n\n- **repo.owner:** your Github username\n- **repo.name:** the name of your repository\n- **repo.path:** the folder to use within the repository. If it doesn't exist it will be created.\n\n\nIf your username was `john-doe` and your repository was called `n8n-backups` and you wanted the credentials to go into a `credentials` folder you would set:\n\n- repo.owner - john-doe\n- repo.name - n8n-backups\n- repo.path - credentials/\n\n\nThe workflow calls itself using a subworkflow, to help reduce memory usage.","height":596.4810912485963,"width":365.19481715599653,"color":4},"id":"b29bd510-ed71-4cff-8688-44fb6a56aa3c","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[368,240],"typeVersion":1},{"parameters":{"content":"## Main workflow loop","height":434.88564057365943,"width":1028.7522287279464,"color":7},"id":"67a89994-2696-429f-a181-16058304f622","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[768,432],"typeVersion":1},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"name","value":"={{ $json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $json.repo.name }}"},"filePath":"={{ $json.repo.path }}{{ $('Execute Workflow Trigger').item.json.id }}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"68b3f7cb-9577-4f76-9cd5-3beb6811ccd8","name":"Get file data","type":"n8n-nodes-base.github","position":[960,992],"webhookId":"8ec34608-0298-4b1a-9af4-d97ef077087c","typeVersion":1,"alwaysOutputData":true,"credentials":{"githubApi":{"id":"vhzyXO7hHaxVDu20","name":"DM - GitHub account"}},"continueOnFail":true},{"parameters":{"assignments":{"assignments":[{"id":"6cf546c5-5737-4dbd-851b-17d68e0a3780","name":"repo.owner","type":"string","value":"sebratel"},{"id":"452efa28-2dc6-4ea3-a7a2-c35d100d0382","name":"repo.name","type":"string","value":"dev_n8n"},{"id":"81c4dc54-86bf-4432-a23f-22c7ea831e74","name":"repo.path","type":"string","value":""}]},"options":{}},"id":"a7ec0c66-bc43-49f4-8644-14fbedfe8db0","name":"Globals","type":"n8n-nodes-base.set","position":[752,1152],"typeVersion":3.4},{"parameters":{"command":"npx n8n export:credentials --all --decrypted"},"id":"e77a4830-3ef8-409f-ba49-65948aad8243","name":"Execute Command","type":"n8n-nodes-base.executeCommand","position":[1040,608],"typeVersion":1},{"parameters":{"jsCode":"// Function to beautify JSON\nfunction beautifyJson(jsonString) {\n  try {\n    // Parse the JSON string\n    const jsonObject = JSON.parse(jsonString);\n\n    // Format the JSON with indentation\n    return jsonObject; // Return the parsed object directly\n  } catch (error) {\n    // Return the error message if JSON is invalid\n    return `Invalid JSON: ${error.message}`;\n  }\n}\n\n// Retrieve the JSON object from the input data\nconst input = $input.all()[0].json;\n\n// Extract the JSON string from the stdout field\nconst jsonString = input.stdout.match(/\\[{.*}\\]/s);\n\n// Check if a valid JSON string is found\nif (!jsonString) {\n  return {\n    json: {\n      error: \"No valid JSON string found in stdout.\"\n    }\n  };\n}\n\n// Beautify the JSON\nconst beautifiedJson = beautifyJson(jsonString[0]);\n\n// Output the beautified JSON, ensuring each entry is in an object with a 'json' key\nconst output = beautifiedJson.map(entry => ({ json: entry }));\n\n// Return the output\nreturn output;\n"},"id":"be71f889-e35d-48af-a086-81a3829f2cd2","name":"JSON formatting","type":"n8n-nodes-base.code","position":[1216,608],"typeVersion":2},{"parameters":{"content":"## Edit this node ðŸ‘‡","height":80,"width":150,"color":4},"id":"79c0ae33-6cc5-4e8a-b070-c711d92c9666","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[720,1040],"typeVersion":1},{"parameters":{"workflowId":"={{ $workflow.id }}","mode":"each","options":{}},"id":"67cd28e6-4dd8-4cf5-aec7-6aefdd472d5d","name":"Execute Workflow","type":"n8n-nodes-base.executeWorkflow","position":[1632,608],"typeVersion":1},{"parameters":{"inputSource":"passthrough"},"id":"517e7e45-84ff-4198-a9c5-6e666267dbb1","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[480,1264],"typeVersion":1.1},{"parameters":{"content":"### ðŸ’¡ **Want to learn advanced n8n skills and earn money building workflows?**\nâ€Ž â€Ž â€Ž â€Ž â€Ž â€Ž â€Ž â€ŽCheck out [Scrapes Academy](https://www.skool.com/scrapes/about?ref=21f10ad99f4d46ba9b8aaea8c9f58c34)","width":640,"color":4},"id":"54adfdb9-d892-4368-8f81-52ab0c343fd3","name":"Sticky Note16","type":"n8n-nodes-base.stickyNote","position":[768,240],"typeVersion":1}],"connections":{"Get File":{"main":[[{"node":"Merge Items","type":"main","index":0}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"Merge Items":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"isDiffOrNew":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Check Status":{"main":[[{"node":"Same file - Do nothing","type":"main","index":0}],[{"node":"File is different","type":"main","index":0}],[{"node":"File is new","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"If file too large","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Execute Command":{"main":[[{"node":"JSON formatting","type":"main","index":0}]]},"JSON formatting":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Execute Workflow","type":"main","index":0}]]},"Execute Workflow":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Execute Command","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"If file too large":{"main":[[{"node":"Get File","type":"main","index":0}],[{"node":"Merge Items","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"On clicking 'execute'":{"main":[[{"node":"Execute Command","type":"main","index":0}]]},"Same file - Do nothing":{"main":[[{"node":"Return","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Globals","type":"main","index":0},{"node":"Merge Items","type":"main","index":1}]]},"Globals":{"main":[[{"node":"Get file data","type":"main","index":0}]]}},"settings":{"callerPolicy":"workflowsFromSameOwner","executionOrder":"v1"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]}},"meta":{"templateId":"2307"},"pinData":{},"versionId":"14fe63e0-2eef-4761-bcea-33b1363c2491","triggerCount":1,"shared":[{"createdAt":"2025-08-30T19:42:29.257Z","updatedAt":"2025-08-30T19:42:29.257Z","role":"workflow:owner","workflowId":"ngwKz2hdvldF12gF","projectId":"UkmxdPS16V9GSHYc"}],"tags":[]}